name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  notify-start:
    runs-on: ubuntu-latest
    steps:
      - name: Send workflow start notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸš€ Release Workflow Started
            
            Repository: ${{ github.repository }}
            Tag: ${{ github.ref_name }}
            Triggered by: ${{ github.actor }}

  build:
    needs: notify-start
    runs-on: macos-14
    permissions:
      contents: write  # Needed for creating releases
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install system dependencies
        run: brew install portaudio
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Build package
        run: uv run hatch build
      
      - name: Get package metadata
        id: metadata
        run: |
          echo "pkg_name=$(uv run python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['name'])")" >> $GITHUB_OUTPUT
          echo "version=$(uv run python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.metadata.outputs.pkg_name }} ${{ steps.metadata.outputs.version }}
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set build outputs
        id: build_info
        run: |
          echo "pkg_name=${{ steps.metadata.outputs.pkg_name }}" >> $GITHUB_OUTPUT
          echo "version=${{ steps.metadata.outputs.version }}" >> $GITHUB_OUTPUT
          echo "release_url=${{ steps.create_release.outputs.url }}" >> $GITHUB_OUTPUT

  notify-complete:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send final status notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ“¦ Release Workflow Complete
            
            Status: ${{ needs.build.result }}
            Package: ${{ needs.build.outputs.pkg_name }}
            Version: ${{ needs.build.outputs.version }}
            
            Repository: ${{ github.repository }}
            Tag: ${{ github.ref_name }}
            Release URL: ${{ needs.build.outputs.release_url }}
            Triggered by: ${{ github.actor }}